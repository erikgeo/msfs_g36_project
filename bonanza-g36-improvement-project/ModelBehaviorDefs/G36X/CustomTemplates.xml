<Include RelativeFile="Subtemplates\\G36_Subtemplates.xml"/>

<Template Name = "G36_Environment_Airco">
	<Update Once="True">
		#CIRCUIT_ID# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
	</Update>
	<UseTemplate Name = "G36_2way_switch_xml">
		<ANIMTIP_0>Turn Airco On</ANIMTIP_0>
		<ANIMTIP_1>Turn Airco Off</ANIMTIP_1>
		<WWISE_EVENT_1>avionic_switch_on</WWISE_EVENT_1>
		<WWISE_EVENT_2>avionic_switch_off</WWISE_EVENT_2>
		<LEFT_SINGLE_CODE>
			(L:XMLVAR_Airco) 0 ==
			if{
				1 (&gt;L:XMLVAR_Airco)
				#CIRCUIT_ID# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
			} els{
				0 (&gt;L:XMLVAR_Airco)
				#CIRCUIT_ID# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
			}
		</LEFT_SINGLE_CODE>
	</UseTemplate>
</Template>

<Template Name = "G36_Environment_Blower">
	<Update Once="True">
		#CIRCUIT_ID# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
	</Update>
	<UseTemplate Name = "G36_2way_switch_xml">
		<ANIMTIP_0>AC Blower High</ANIMTIP_0>
		<ANIMTIP_1>AC Blower Off</ANIMTIP_1>
		<WWISE_EVENT_1>avionic_switch_on</WWISE_EVENT_1>
		<WWISE_EVENT_2>avionic_switch_off</WWISE_EVENT_2>
		<LEFT_SINGLE_CODE>
			(L:XMLVAR_Blower) 0 ==
			if{
				1 (&gt;L:XMLVAR_Blower)
				#CIRCUIT_ID# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
			} els{
				0 (&gt;L:XMLVAR_Blower)
				#CIRCUIT_ID# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
			}
		</LEFT_SINGLE_CODE>
	</UseTemplate>
</Template>

<Template Name = "G36_Vent_Blower">
	<Update Once="True">
		#CIRCUIT_ID# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
	</Update>
	<UseTemplate Name = "G36_2way_switch_xml">
		<ANIMTIP_0>Turn Vent Blower On</ANIMTIP_0>
		<ANIMTIP_1>Turn Vent Blower Off</ANIMTIP_1>
		<WWISE_EVENT_1>avionic_switch_on</WWISE_EVENT_1>
		<WWISE_EVENT_2>avionic_switch_off</WWISE_EVENT_2>
		<LEFT_SINGLE_CODE>
			(L:XMLVAR_Vent) 0 ==
			if{
				1 (&gt;L:XMLVAR_Vent)
				#CIRCUIT_ID# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
			} els{
				0 (&gt;L:XMLVAR_Vent)
				#CIRCUIT_ID# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
			}
		</LEFT_SINGLE_CODE>
	</UseTemplate>
</Template>

<Template Name = "G36_Annun_Test">
	<UseTemplate Name = "G36_pushbutton_xml">
		<ANIMTIP_0>Test Annunciators</ANIMTIP_0>
		<ANIMTIP_1>Test Annunciators</ANIMTIP_1>
		<WWISE_EVENT_1>avionic_switch_on</WWISE_EVENT_1>
		<WWISE_EVENT_2>avionic_switch_off</WWISE_EVENT_2>
		<LEFT_SINGLE_CODE>
			1 (&gt;L:XMLVAR_Test)
		</LEFT_SINGLE_CODE>
		<LEFT_LEAVE_CODE>
			0 (&gt;L:XMLVAR_Test)
		</LEFT_LEAVE_CODE>
	</UseTemplate>
</Template>

<Template Name="G36_AlternateAir_Template">
	<UseTemplate Name="G36_AlternateAir_SubTemplate">
		<NODE_ID>ENGINE_Lever_AlternateAir</NODE_ID>
		<ANIM_NAME>ENGINE_Lever_AlternateAir</ANIM_NAME>
		<ID>1</ID>
	</UseTemplate>
</Template>

<!--
Custom Gear indicator light logic that in addition to the Asobo templates
allows the annunciator to light up when test button is pushed (using local simvar XMLVAR_Test)

Required parameters:

SIMVAR (GEAR CENTER/LEFT/RIGHT POSITION)
NODE_ID
-->

<Template Name = "G36_Gear_Indicator_Lights">
	<Component ID="#NODE_ID#" Node="#NODE_ID#">
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
			<PART_ID>#NODE_ID#</PART_ID>
			<EMISSIVE_CODE>
				(*CONDITION 1*)
				(L:XMLVAR_Test) 1 ==

				(*CONDITION 2*)
				(A:#SIMVAR#, Percent) 100 == or
			</EMISSIVE_CODE>
		</UseTemplate>
	</Component>
</Template>

<Template Name="G36_LANDING_GEAR_Light_Center_Template">
	<UseTemplate Name="G36_Gear_Indicator_Lights">
		<SIMVAR>GEAR CENTER POSITION</SIMVAR>
		<NODE_ID>LANDING_GEAR_Light_Center</NODE_ID>
	</UseTemplate>
</Template>
<Template Name="G36_LANDING_GEAR_Light_Left_Template">
	<UseTemplate Name="G36_Gear_Indicator_Lights">
		<SIMVAR>GEAR LEFT POSITION</SIMVAR>
		<NODE_ID>LANDING_GEAR_Light_Left</NODE_ID>
	</UseTemplate>
</Template>
<Template Name="G36_LANDING_GEAR_Light_Right_Template">
	<UseTemplate Name="G36_Gear_Indicator_Lights">
		<SIMVAR>GEAR RIGHT POSITION</SIMVAR>
		<NODE_ID>LANDING_GEAR_Light_Right</NODE_ID>
	</UseTemplate>
</Template>

<Template Name = "G36_Gear_Unsafe_Light">
	<Component ID="LANDING_GEAR_Light_Unsafe" Node="LANDING_GEAR_Light_Unsafe">
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
			<PART_ID>LANDING_GEAR_Light_Unsafe</PART_ID>
			<EMISSIVE_CODE>
				(*CONDITION 1*)
				(L:XMLVAR_Test) 1 ==

				(*CONDITION 2*)
				(A:CIRCUIT GEAR MOTOR ON, Bool) or

				(*CONDITION 3*)
				(A:GEAR RIGHT POSITION, Percent) 0 &gt;
				(A:GEAR RIGHT POSITION, Percent) 100 &lt; and
				(A:GEAR CENTER POSITION, Percent) 0 &gt; or
				(A:GEAR CENTER POSITION, Percent) 100 &lt; and
				(A:GEAR LEFT POSITION, Percent) 0 &gt; or
				(A:GEAR LEFT POSITION, Percent) 100 &lt; and or
			</EMISSIVE_CODE>
		</UseTemplate>
	</Component>
</Template>

<!--
Custom Flaps indicator light logic that in addition to the Asobo templates
allows the annunciator to light up when test button is pushed (using local simvar XMLVAR_Test)

Required parameters:

ID
TARGET
-->
<Template Name="G36_Flaps_Position">
	<DefaultTemplateParameters>
		<NODE_ID>HANDLING_Light_Flaps_#ID#</NODE_ID>
		<TARGET>0</TARGET>
	</DefaultTemplateParameters>
	<Component ID="#NODE_ID#" Node="#NODE_ID#">
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
			<EMISSIVE_CODE>
			(*CONDITION 1*)
			(L:XMLVAR_Test) 1 ==

			(*CONDITION 2*)
			(A:TRAILING EDGE FLAPS LEFT ANGLE, degrees) #TARGET# - abs 0.1 &lt;
			(A:TRAILING EDGE FLAPS RIGHT ANGLE, degrees) #TARGET# - abs 0.1 &lt; and or
			</EMISSIVE_CODE>
		</UseTemplate>
	</Component>
</Template>

<Template Name="G36_Flaps_Aph_Position">
	<UseTemplate Name="G36_Flaps_Position">
		<ID>2</ID>
		<TARGET>12</TARGET>
	</UseTemplate>
</Template>

<Template Name="G36_Flaps_Dn_Position">
	<UseTemplate Name="G36_Flaps_Position">
		<ID>3</ID>
		<TARGET>30</TARGET>
	</UseTemplate>
</Template>

<Template Name="G36_Flaps_Transit">
	<Component ID="HANDLING_Light_Flaps_1" Node="HANDLING_Light_Flaps_1">
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
			<EMISSIVE_CODE>
			(*CONDITION 1*)
			(L:XMLVAR_Test) 1 ==

			(*CONDITION 2*)
			(A:CIRCUIT FLAP MOTOR ON, Bool) or
			</EMISSIVE_CODE>
		</UseTemplate>
	</Component>
</Template>



<!--####################### ADDED BY WEPT ####################################-->

	<Template Name="G36_PASSENGER_Lever_Cabin_Heat_Template">
		<UseTemplate Name="G36_PASSENGER_Cabin_Heat_Template">
			<INTERACTION_TYPE>Lever</INTERACTION_TYPE>
		</UseTemplate>
	</Template>
	<Template Name="G36_PASSENGER_Cabin_Heat_Template">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>
		<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
			<TEMPLATE_TO_CALL>G36_PASSENGER_Cabin_Heat_SubTemplate</TEMPLATE_TO_CALL>
		</UseTemplate>
	</Template>
	<Template Name="G36_PASSENGER_Cabin_Heat_SubTemplate">
		<Parameters Type="Default">
			<WWISE_PREFIX>cabin_heat</WWISE_PREFIX>
			<NODE_ID>PASSENGER_#INTERACTION_TYPE#_Cabin_Heat#SUFFIX_ID#</NODE_ID>
			<ANIM_NAME>PASSENGER_#INTERACTION_TYPE#_Cabin_Heat#SUFFIX_ID#</ANIM_NAME>
			<TOOLTIP_TITLE>@TT_Package.CABIN_HOT_AIR_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.CABIN_HOT_AIR_ACTION_SET</TT_DESCRIPTION_ID>
		</Parameters>
		<UseTemplate Name="G36_PASSENGER_Cabin_Base_Template">
			<IE_ID>Cabin_Heat#SUFFIX_ID#</IE_ID>
		</UseTemplate>
	</Template>
	
	<!--################# CABIN AIR LEVER ###################-->
	<Template Name="G36_PASSENGER_Lever_Cabin_Air_Template">
		<UseTemplate Name="G36_PASSENGER_Cabin_Air_Template">
			<INTERACTION_TYPE>Lever</INTERACTION_TYPE>
		</UseTemplate>
	</Template>
	<Template Name="G36_PASSENGER_Cabin_Air_Template">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>
		<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
			<TEMPLATE_TO_CALL>G36_PASSENGER_Cabin_Air_SubTemplate</TEMPLATE_TO_CALL>
		</UseTemplate>
	</Template>
	<Template Name="G36_PASSENGER_Cabin_Air_SubTemplate">
		<Parameters Type="Default">
			<WWISE_PREFIX>cabin_heat</WWISE_PREFIX>
			<NODE_ID>PASSENGER_#INTERACTION_TYPE#_Cabin_Air#SUFFIX_ID#</NODE_ID>
			<ANIM_NAME>PASSENGER_#INTERACTION_TYPE#_Cabin_Air#SUFFIX_ID#</ANIM_NAME>
			<TOOLTIP_TITLE>@TT_Package.CABIN_AIR_FLOW_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.CABIN_AIR_FLOW_ACTION</TT_DESCRIPTION_ID>
		</Parameters>
		<UseTemplate Name="G36_PASSENGER_Cabin_Base_Template">
			<IE_ID>Cabin_Air#SUFFIX_ID#</IE_ID>
		</UseTemplate>
	</Template>
	
	<!--################# PASSENGER BASE TEMPLATE ###################-->	
	<Template Name="G36_PASSENGER_Cabin_Base_Template">
		<Parameters Type="Default">
			<INPUT_EVENT_ID_SOURCE>PASSENGER</INPUT_EVENT_ID_SOURCE>
			<USE_INPUT_EVENT_ID>PASSENGER</USE_INPUT_EVENT_ID>
		</Parameters>
		<Parameters Type="Default">
			<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_ID#</TOOLTIP_ENTRY_0>
			<ANIM_LENGTH>100</ANIM_LENGTH>
			<Switch Param="INTERACTION_TYPE">
				<Case Value="Lever">
					<AXIS_INCREMENT>5</AXIS_INCREMENT>
					<AXIS>Y</AXIS>
					<WWISE_EVENT_1_LEVER>#WWISE_PREFIX#_lever_on</WWISE_EVENT_1_LEVER>
					<WWISE_EVENT_2_LEVER>#WWISE_PREFIX#_lever_off</WWISE_EVENT_2_LEVER>
					<LEVER_ANIM_VAR>XMLVAR_#IE_ID#_Position</LEVER_ANIM_VAR>
					<LEVER_ANIM_SCOPE>L</LEVER_ANIM_SCOPE>    <!-- ############## DEFAULT WAS AN O ############### -->
				</Case>
			</Switch>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="INTERACTION_TYPE">
				<Case Value="Lever">
					<USE_TRAJECTORY_DRAG_MODE>True</USE_TRAJECTORY_DRAG_MODE>
				</Case>
			</Switch>
		</Parameters>
		<Component ID="#NODE_ID#" Node="#NODE_ID#">
			<Switch Param="INTERACTION_TYPE">
				<Case Value="Lever">
					<UseInputEvent ID="#USE_INPUT_EVENT_ID#">
						<LEVER_ID>#IE_ID#</LEVER_ID>
						<SET_STATE_EXTERNAL>(&gt;#LEVER_ANIM_SCOPE#:#LEVER_ANIM_VAR#)</SET_STATE_EXTERNAL>
						<GET_STATE_EXTERNAL>(#LEVER_ANIM_SCOPE#:#LEVER_ANIM_VAR#)</GET_STATE_EXTERNAL>
						<MAX_VALUE>#ANIM_LENGTH#</MAX_VALUE>
						<NO_ANIM_VAR_UPDATE>True</NO_ANIM_VAR_UPDATE>
						<INC_PARAM_0>#AXIS_INCREMENT# p0 *</INC_PARAM_0>
						<INC_PARAM_0_IS_DYNAMIC>True</INC_PARAM_0_IS_DYNAMIC>
						<DEC_PARAM_0>#AXIS_INCREMENT# p0 *</DEC_PARAM_0>
						<DEC_PARAM_0_IS_DYNAMIC>True</DEC_PARAM_0_IS_DYNAMIC>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Lever_DraggingWheelLeftDrag_Axis">
						<ANIM_CODE>(#LEVER_ANIM_SCOPE#:#LEVER_ANIM_VAR#)</ANIM_CODE>
						<POSITIVE_AXIS_CODE>1 (&gt;B:#INPUT_EVENT_ID_SOURCE#_#IE_ID#_Inc)</POSITIVE_AXIS_CODE>
						<NEGATIVE_AXIS_CODE>1 (&gt;B:#INPUT_EVENT_ID_SOURCE#_#IE_ID#_Dec)</NEGATIVE_AXIS_CODE>
						<DRAG_CODE>#ANIM_LENGTH# (M:DragPercent) * (&gt;B:#INPUT_EVENT_ID_SOURCE#_#IE_ID#_Set)</DRAG_CODE>
						<NO_ARROWS/>
						<CURSOR>Grab</CURSOR>
						<WWISE_EVENT_1>#WWISE_EVENT_1_LEVER#</WWISE_EVENT_1>
						<WWISE_EVENT_2>#WWISE_EVENT_2_LEVER#</WWISE_EVENT_2>
					</UseTemplate>
				</Case>
			</Switch>
		</Component>
		<Condition Check="HIGHLIGHT_NODE_ID">
			<UseTemplate Name="ASOBO_GT_ComponentWith_PART_ID">
				<NODE_ID>#HIGHLIGHT_NODE_ID#</NODE_ID>
			</UseTemplate>
		</Condition>
		<UseTemplate Name="ASOBO_GT_Update">
			<UPDATE_CODE>
			<UPDATE_ONCE/>
				(L:XMLVAR_CABIN_HEAT_1_POSITION, enum) (&gt;B:PASSENGER_Cabin_Heat#SUFFIX_ID#_Set) 
			</UPDATE_CODE>
		</UseTemplate>
		<Update Frequency="1">
			(B:PASSENGER_Cabin_Heat_1_Set) 20 &gt;= (A:ENG OIL TEMPERATURE:1, celsius) 45 &gt;= and
			(A:ELECTRICAL MASTER BATTERY:1, bool) 1 == (A:ELECTRICAL MASTER BATTERY:2, bool) 1 == or and
				if{
					1 (&gt;K:WINDSHIELD_DEICE_ON, Bool)
				}
			(B:PASSENGER_Cabin_Heat_1_Set) 20 &lt; (A:ENG OIL TEMPERATURE:1, celsius) 45 &lt; or
			(A:ELECTRICAL MASTER BATTERY:1, bool) 0 == (A:ELECTRICAL MASTER BATTERY:2, bool) 0 == and or
				if{
					1 (&gt;K:WINDSHIELD_DEICE_OFF, Bool)
				}	
		</Update>
	</Template>